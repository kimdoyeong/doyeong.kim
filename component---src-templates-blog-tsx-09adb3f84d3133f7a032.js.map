{"version":3,"sources":["webpack:///./src/templates/blog.tsx","webpack:///./src/components/Form/Button/index.tsx"],"names":["Wrap","styled","div","Banner","props","image","css","mobile","query","BlogTemplate","page","data","markdownRemark","meta","frontmatter","property","content","childImageSharp","fluid","src","title","description","excerpt","className","to","date","dangerouslySetInnerHTML","__html","html","Button","button","primary"],"mappings":"2FAAA,8IAQMA,EAAOC,IAAOC,IAAV,iEAAGD,CAAH,8DAOJE,EAASF,IAAOC,IAAV,mEAAGD,CAAH,0nBAER,SAAAG,GAAK,OACLA,EAAMC,MACFC,YADJ,mCAEwBF,EAAMC,OAE1BC,YAJJ,2BAoCIC,YAAOD,YAAA,CAAD,qBA8EP,IAAME,EAAQ,aAqBNC,UAxEf,YAAyD,IACjDC,EADiD,EAAjCC,KAAQC,eAExBC,EAAOH,EAAKI,YAAYT,MAC1B,CACE,CACEU,SAAU,WACVC,QAASN,EAAKI,YAAYT,MAAMY,gBAAgBC,MAAMC,MAG1D,GACJ,OACE,kBAAC,IAAD,KACE,kBAACnB,EAAD,KACE,kBAAC,IAAD,CACEoB,MAAOV,EAAKI,YAAYM,MACxBC,YAAaX,EAAKI,YAAYO,aAAeX,EAAKY,QAClDT,KAAMA,IAER,kBAACV,EAAD,CACEE,MACEK,EAAKI,YAAYT,OACjBK,EAAKI,YAAYT,MAAMY,gBAAgBC,MAAMC,KAG/C,yBAAKI,UAAU,UACb,kBAAC,OAAD,CAAMC,GAAG,cACP,kBAAC,IAAD,kBAGJ,4BAAQD,UAAU,UAChB,wBAAIA,UAAU,SAASb,EAAKI,YAAYM,OACxC,yBAAKG,UAAU,OACb,uBAAGA,UAAU,QAAQb,EAAKI,YAAYW,MACrCf,EAAKI,YAAYO,aAChB,2BAAIX,EAAKI,YAAYO,eAI3B,yBAAKE,UAAU,gBAEjB,yBAAKA,UAAU,YACb,6BACEA,UAAU,4BACVG,wBAAyB,CAAEC,OAAQjB,EAAKkB,a,kCC5HpD,gBAKMC,EAAS5B,IAAO6B,OAAV,4DAAG7B,CAAH,kIAQN,SAACG,GAAD,OAAWA,EAAM2B,QAAUzB,YAAhB,8EAITA,YAJS,0FAWFuB","file":"component---src-templates-blog-tsx-09adb3f84d3133f7a032.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport styled, { css } from \"styled-components\"\n\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/SEO\"\nimport { mobile } from \"../lib/style/media\"\nimport Button from \"../components/Form/Button\"\nconst Wrap = styled.div`\n  .contents {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 2.5em;\n  }\n`\nconst Banner = styled.div<{ image?: string }>`\n  height: 100vh;\n  ${props =>\n    props.image\n      ? css`\n          background: url(${props.image}) no-repeat;\n        `\n      : css`\n          background: #dadada;\n        `}\n  background-size: cover;\n  background-position: center;\n  box-shadow: 0 10px 5px -1px rgba(0, 0, 0, 0.3);\n  position: relative;\n  & > .topbar {\n    position: absolute;\n    top: 24px;\n    left: 24px;\n    a {\n      all: unset;\n      cursor: pointer;\n    }\n  }\n  & > header.header {\n    position: absolute;\n    bottom: 0;\n    padding: 3em;\n    padding-bottom: 10vh;\n    z-index: 3;\n    margin-bottom: 2rem;\n    max-width: 1280px;\n    margin: 0 auto;\n    left: 0;\n    right: 0;\n    .title {\n      font-size: 3.5em;\n      margin-top: 0;\n      margin-bottom: 1rem;\n\n      ${mobile(css`\n        font-size: 3em;\n      `)}\n    }\n    .sub p {\n      margin-top: 0;\n      color: #bababa;\n      &.date {\n        margin: 0;\n      }\n    }\n  }\n  & > .background {\n    background: linear-gradient(\n      to bottom,\n      rgba(0, 0, 0, 0) 10%,\n      rgba(0, 0, 0, 0.7) 70%\n    );\n\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    height: 70vh;\n    z-index: 0;\n  }\n`\nfunction BlogTemplate({ data: { markdownRemark } }: any) {\n  const page = markdownRemark\n  const meta = page.frontmatter.image\n    ? [\n        {\n          property: \"og:image\",\n          content: page.frontmatter.image.childImageSharp.fluid.src,\n        },\n      ]\n    : []\n  return (\n    <Layout>\n      <Wrap>\n        <SEO\n          title={page.frontmatter.title}\n          description={page.frontmatter.description || page.excerpt}\n          meta={meta}\n        />\n        <Banner\n          image={\n            page.frontmatter.image &&\n            page.frontmatter.image.childImageSharp.fluid.src\n          }\n        >\n          <div className=\"topbar\">\n            <Link to=\"/blog/list\">\n              <Button>목록으로 가기</Button>\n            </Link>\n          </div>\n          <header className=\"header\">\n            <h1 className=\"title\">{page.frontmatter.title}</h1>\n            <div className=\"sub\">\n              <p className=\"date\">{page.frontmatter.date}</p>\n              {page.frontmatter.description && (\n                <p>{page.frontmatter.description}</p>\n              )}\n            </div>\n          </header>\n          <div className=\"background\" />\n        </Banner>\n        <div className=\"contents\">\n          <article\n            className=\"article _content_article_\"\n            dangerouslySetInnerHTML={{ __html: page.html }}\n          />\n        </div>\n      </Wrap>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt\n      frontmatter {\n        title\n        description\n        date(formatString: \"YYYY-MM-DD\")\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3840) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport default BlogTemplate\n","import styled, { css } from 'styled-components';\n\ninterface ButtonProps {\n    primary?: boolean;\n}\nconst Button = styled.button<ButtonProps>`\n    all: unset;\n    opacity: 1;\n    padding: .5em 1em;\n    border-radius: 3px;\n    box-shadow: 2px 2px 5px -1px rgba(0,0,0,0.3);\n    box-sizing: border-box;\n\n    ${(props) => props.primary ? css`\n        color: white !important;\n        -webkit-text-fill-color: white;\n        background: #7f5cff;\n    ` : css`\n        color: black !important;\n        -webkit-text-fill-color: black;\n        background: rgb(230,230,230);\n    `}\n`;\n\nexport default Button;"],"sourceRoot":""}